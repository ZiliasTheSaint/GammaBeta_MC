package gammaBetaMc.resources;

import java.util.ListResourceBundle;

/**
 * The resource bundle for GammaBeta class. <br>
 * 
 * @author Dan Fulea, 27 Jun. 2011
 * 
 */
public class GammaBetaFrameResources extends ListResourceBundle {

	/**
	 * Returns the array of strings in the resource bundle.
	 * 
	 * @return the resources.
	 */
	public Object[][] getContents() {
		// TODO Auto-generated method stub
		return CONTENTS;
	}

	/** The resources to be localised. */
	private static final Object[][] CONTENTS = {

			{ "form.icon.url", "/danfulea/resources/personal.png"},//"/jdf/resources/duke.png" },
			{ "icon.url", "/danfulea/resources/personal.png"},//"/jdf/resources/globe.gif" },

			{ "img.chart.bar", "/danfulea/resources/chart_bar.png" },
			{ "img.chart.curve", "/danfulea/resources/chart_curve.png" },

			{ "img.zoom.in", "/danfulea/resources/zoom_in.png" },
			{ "img.zoom.out", "/danfulea/resources/zoom_out.png" },
			{ "img.pan.left", "/danfulea/resources/arrow_left.png" },
			{ "img.pan.up", "/danfulea/resources/arrow_up.png" },
			{ "img.pan.down", "/danfulea/resources/arrow_down.png" },
			{ "img.pan.right", "/danfulea/resources/arrow_right.png" },
			{ "img.pan.refresh", "/danfulea/resources/arrow_refresh.png" },

			{ "img.accept", "/danfulea/resources/accept.png" },
			{ "img.insert", "/danfulea/resources/add.png" },
			{ "img.delete", "/danfulea/resources/delete.png" },
			{ "img.delete.all", "/danfulea/resources/bin_empty.png" },
			{ "img.view", "/danfulea/resources/eye.png" },
			{ "img.set", "/danfulea/resources/cog.png" },
			{ "img.report", "/danfulea/resources/document_prepare.png" },
			{ "img.today", "/danfulea/resources/time.png" },
			{ "img.open.file", "/danfulea/resources/open_folder.png" },
			{ "img.open.database", "/danfulea/resources/database_connect.png" },
			{ "img.save.database", "/danfulea/resources/database_save.png" },
			{ "img.substract.bkg", "/danfulea/resources/database_go.png" },
			{ "img.close", "/danfulea/resources/cross.png" },
			{ "img.about", "/danfulea/resources/information.png" },
			{ "img.printer", "/danfulea/resources/printer.png" },

			{ "Application.NAME", "GES_MC: Gamma-Electron Simulator" },
			{ "About.NAME", "About" },

			{ "Author", "Author:" },
			{ "Author.name", "Dan Fulea , fulea.dan@gmail.com" },

			{ "Application.name", "GES_MC" },
			{ "Version", "Version:" },
			{ "Version.name", "GES_MC 4.1" },

			{
					"License",
					//"This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License (version 2) as published by the Free Software Foundation. \n\nThis program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details. \n" },
			"Copyright (c) 2014, Dan Fulea \nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n\n3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n" },

			{ "simTa.toolTip", "Select text and then hold CNTRL+C to copy!" },

			{ "menu.file", "File" },
			{ "menu.file.mnemonic", new Character('F') },

			{ "menu.help.LF", "Look and feel..." },
			{ "menu.help.LF.mnemonic", new Character('L') },
			{ "menu.help.LF.toolTip", "Change application look and feel" },

			{ "menu.file.exit", "Close" },
			{ "menu.file.exit.mnemonic", new Character('C') },
			{ "menu.file.exit.toolTip", "Close the application" },

			{ "menu.help", "Help" },
			{ "menu.help.mnemonic", new Character('H') },

			{ "menu.help.about", "About..." },
			{ "menu.help.about.mnemonic", new Character('A') },
			{ "menu.help.about.toolTip",
					"Several informations about this application" },

			{ "text.simulation.stop", "Interrupred by user!" },
			{ "status.wait", "Waiting for your action!" },
			{ "status.computing", "Computing..." },
			{ "status.done", "All done! " },
			{ "status.error", "Unexpected error!" },
			{ "status.save", "Saved: " },
			{ "status.load", "Loaded: " },
			{ "number.error", "Insert valid positive numbers! " },
			// ==============
			{ "main.startsimB", "Run" },
			{ "main.startsimB.mnemonic", new Character('R') },
			{ "main.stopsimB", "Kill" },
			{ "main.stopsimB.mnemonic", new Character('K') },
			{ "rezultat", "" },
			{ "source.border", "Source settings" },
			{ "detector.border", "Detector settings" },
			{ "main.saveSB", "Save source..." },
			{ "main.saveSB.mnemonic", new Character('v') },
			{ "main.saveDB", "Save detector..." },
			{ "main.saveDB.mnemonic", new Character('d') },
			{ "main.loadSB", "Load source..." },
			{ "main.loadSB.mnemonic", new Character('L') },
			{ "main.loadDB", "Load detector..." },
			{ "main.loadDB.mnemonic", new Character('o') },
			{ "dettype.label", "Type: " },
			{ "sourcetype.label", "Geometry: " },
			{ "sourceeq.label", "Equivalent composition: " },
			{ "asource.label", "External diameter (cm): " },
			{ "bsource.label", "Internal diameter (cm): " },
			{ "hsource.label", "Total height (cm): " },
			{ "asourceup.label", "Upper height, above detector (cm): " },
			{ "adet.label", "Effective diameter (cm): " },
			{ "hdet.label", "Effective height (cm): " },
			{ "adetTot.label", "Total diameter (cm): " },
			{ "hdetTot.label", "Total height(cm): " },
			{ "hdetUp.label", "Upper inactive volume height (cm): " },
			{ "src.load", "src" },
			{ "src.load.description", "Source file" },
			{ "det.load", "det" },
			{ "det.load.description", "Detector file" },
			{ "data.load", "Data" },
			{ "main.atenuareCh", "Attenuation in source volume" },

			{
					"main.nPhotonsCb",
					new String[] { "10000", "20000", "40000", "60000", "80000",
							"100000", "300000", "500000", "5000000",
							"10000000", "50000000" } },
			{ "main.detTypeCb", new String[] { "NaI", "Ge" } },
			{
					"main.sourceTypeCb",
					new String[] { "Point source", "Sarpagan", "Marinelli",
							"Frontal Beam" } },// geometrie
			{ "main.sourceEqCb",
					new String[] { "H2O", "NaCl", "soil", "concrete" } },
			{ "main.adetTf", "6.3" },
			{ "main.hdetTf", "6.3" },
			{ "main.energyTf", "0.662" },
			// {"main.energyTf.toolTip", "Total energy in MeV!"},
			{ "main.asourceTf", "7.5" },
			{ "main.hsourceTf", "3.4" },
			{ "main.bsourceTf", "0" },
			{
					"main.bsourceTf.toolTip",
					"< source external diamter and > total detector diameter. Marinelli geometry only!" },
			{ "main.hsourceupTf", "0" },
			{ "main.hsourceupTf.toolTip",
					"< total source height. Marinelli geometry only!" },
			{ "main.hdetTotTf", "7.3" },
			{ "main.hdetTotTf.toolTip", "Total height of detector house." },
			{ "main.adetTotTf", "7.3" },
			{ "main.adetTotTf.toolTip", "Total diameter of detector house." },
			{ "main.hUpTf", "0.9" },
			{ "main.hUpTf.toolTip", "Height of upper inactive volume." },
			{ "photon.label", "Number of histories: " },
			{ "en.label", "Incident kinetic energy (MeV): " },

			// dialog messages...
			{ "dialog.exit.title", "Confirm exit ..." },
			{ "dialog.exit.message", "Are you sure ?" },
			{ "dialog.exit.buttons", new Object[] { "Yes", "No" } },
			{ "dialog.OkCancel.buttons", new Object[] { "Ok", "Cancel" } },
			{ "dialog.filechooser.title", "Save" },
			{ "dialog.filechooser.approveButton", "Save" },
			{ "dialog.filechooser.approveButton.mnemonic", new Character('S') },
			// {"dialog.filechooser.title", "Save"},
			// {"dialog.filechooser.approveButton", "Save"},
			// {"dialog.filechooser.approveButton.mnemonic", new
			// Character('S')},
			{ "dialog.double.title", "Error..." },
			{ "dialog.double.message", "Insert real numbers!" },
			{ "dialog.pos.title", "Error..." },
			{ "dialog.pos.message", "Insert positive real numbers!" },
			{ "dialog.duplicate.title", "Error..." },
			{ "dialog.duplicate.message", "Insert no duplicates!" },
			{ "dialog.fraction.title", "Error..." },
			{ "dialog.fraction.message",
					"Fraction by weight must be less than 1.0!" },
			{ "dialog.au.title", "Error..." },
			{ "dialog.au.message", "AE>=UE? or AP>=UP?" },
			{ "dialog.au2.title", "Error..." },
			{ "dialog.au2.message",
					"Lower energy must be less than the higher one" },
			{ "dialog.ae.title", "Error..." },
			{ "dialog.ae.message",
					"AE can not be less than the electron rest energy!" },
			{ "dialog.ue.title", "Error..." },
			{ "dialog.ue.message", "Energy exceeds the UE or UP limit!" },
			{ "dialog.energy.title", "Energy error..." },
			{ "dialog.energy.message",
					"Select energy in [0 - min(UP,UE)] MeV!!" },
			{ "dialog.path.title", "Error..." },
			{ "dialog.path.message", "Density file not found!" },
			{ "dialog.list.title", "Error..." },
			{ "dialog.list.message", "Number of elements can not be null!" },
			{ "dialog.norm.title", "Error..." },
			{ "dialog.norm.message", "Sum of weights <0.99 or >1.01!" },
			// ##############################################3
			// ---------------------------------------------------------
			{ "egsRb.name", "EGS" },
			{ "egsRb.toolTip", "...good for any energy!" },
			{ "clasicRb.name", "Classic" },
			{ "clasicRb.toolTip", "" },// "Recomandat pentru energii foarte joase (X-ray) <~0.200 MeV!!!"},
			{ "kahnRb.name", "Kahn" },
			{ "kahnRb.toolTip", "" },// "Recomandat pentru energii joase <~1.000 MeV! Algoritm alternativ pentru EGS sau clasic"},
			{ "wielopolskiRb.name", "Wielopolski" },
			{ "wielopolskiRb.toolTip", "" },// "Nerecomandat! A se utiliza doar ca studiu de comparare!!"},
			{ "kn.border", "Klein_Nishina algorithm selection:" },
			// --------------------------------------------------------
			{ "testB.name", "Algorithms test" },
			{ "testB.mnemonic", new Character('T') },
			{ "testB.toolTip",
					"test algorithms in terms of polar angle distribution!" },

			{ "test.energie", " Ennergy (MeV): " },
			{ "test.photons", " Generated photons: " },
			{ "test.015", " Probability (%) angles 0-15 degrees: " },
			{ "test.1530", " Probability (%) angles 15-30 degrees: " },
			{ "test.3045", " Probability (%) angles 30-45 degrees: " },
			{ "test.4560", " Probability (%) angles 45-60 degrees: " },
			{ "test.6075", " Probability (%) angles 60-75 degrees: " },
			{ "test.7590", " Probability (%) angles 75-90 degrees: " },
			{ "test.90105", " Probability (%) angles 90-105 degrees: " },
			{ "test.105120", " Probability (%) angles 105-120 degrees: " },
			{ "test.120135", " Probability (%) angles 120-135 degrees: " },
			{ "test.135150", " Probability (%) angles 135-150 degrees: " },
			{ "test.150165", " Probability (%) angles 150-165 degrees: " },
			{ "test.165180", " Probability (%) angles 165-180 degrees: " },
			// ---------------------------------------------------------
			{ "main.calceffB", "Compute" },
			{ "main.calceffB.mnemonic", new Character('C') },
			{ "main.calcactivB", "Compute" },
			{ "main.calcactivB.mnemonic", new Character('l') },

			{ "mc.border", "Monte-Carlo simulation: " },
			{ "eff.border", "Efficiency: " },
			{ "activ.border", "Activity: " },
			{
					"main.winCb",
					new String[] { "Al", "Al2O3", "Au", "Be", "Fe", "Ge",
							"MgO", "NaI", "Si" } },
			{ "main.win1Tf", "0.05" },
			{ "main.win2Tf", "0.0" },
			{ "main.win3Tf", "0.0" },
			{ "main.win4Tf", "0.0" },
			{ "win1.label", "Window 1:  " },
			{ "win2.label", "Window 2:  " },
			{ "win3.label", "Window 3:  " },
			{ "win4.label", "Window 4:  " },
			{ "material.label", "Material  " },
			{ "thickness.label", "Thickness (cm)  " },

			// {"net.label","Arie neta pic absortie totala (imp/s): "},
			{ "net.label", "Photopeak net area(imp/s): " },
			{ "err.label", "Error: " },
			{ "err.pm.label", " +/- " },
			// ====================
			{ "autoRb.name", "Auto" },
			{ "autoRb.toolTip",
					"Automatic selection of the medium - from file!" },
			{ "manualRb.name", "Manual" },
			{ "manualRb.toolTip", "User defined medium!" },
			{ "elemRb.name", "Element" },
			{ "mixtRb.name", "Compound or mixture" },
			{ "main.graphB", "Plot graph..." },
			{ "main.graphB.mnemonic", new Character('g') },
			{ "main.calclB", "Compute" },
			{ "main.calclB.mnemonic", new Character('c') },
			{ "main.addB", "Add" },
			{ "main.addB.mnemonic", new Character('A') },
			{ "main.delB", "Delete" },
			{ "main.delB.mnemonic", new Character('D') },
			{ "main.resetB", "Reset" },
			{ "main.resetB.mnemonic", new Character('R') },
			{ "main.selectB", "Select" },
			{ "main.selectB.mnemonic", new Character('S') },

			{
					"main.elemCb",
					new String[] { "H", "HE", "LI", "BE", "B", "C", "N", "O",
							"F", "NE", "NA", "MG", "AL", "SI", "P", "S", "CL",
							"AR", "K", "CA", "SC", "TI", "V", "CR", "MN", "FE",
							"CO", "NI", "CU", "ZN", "GA", "GE", "AS", "SE",
							"BR", "KR", "RB", "SR", "Y", "ZR", "NB", "MO",
							"TC", "RU", "RH", "PD", "AG", "CD", "IN", "SN",
							"SB", "TE", "I", "XE", "CS", "BA", "LA", "CE",
							"PR", "ND", "PM", "SM", "EU", "GD", "TB", "DY",
							"HO", "ER", "TM", "YB", "LU", "HF", "TA", "W",
							"RE", "OS", "IR", "PT", "AU", "HG", "TL", "PB",
							"BI", "PO", "AT", "RN", "FR", "RA", "AC", "TH",
							"PA", "U", "NP", "PU", "AM", "CM", "BK", "CF",
							"ES", "FM" } },
			{ "main.aeTf", "0.521" },
			{ "main.apTf.toolTip",
					"low energy threshold for soft bremsstrahlung production in MeV!" },
			{ "main.apTf", "0.010" },
			{ "main.aeTf.toolTip",
					"low energy threshold for knock-on electron production in MeV!" },
			{ "main.ueTf", "55.511" },
			{ "main.ueTf.toolTip",
					"upper energy for electron and positrons evaluations MeV!" },
			{ "main.upTf", "55.00" },
			{ "main.upTf.toolTip", "upper energy for photons evaluations MeV!" },
			{ "main.energyTf1", "0.662" },
			{ "main.energyTf.toolTip", ">0, lower than UE or UP [MeV]!" },
			{ "main.mediumTf", "medium" },
			{ "main.densityTf", "1.0" },
			{ "main.densityTf.toolTip", "Medium density in g/cm3!" },
			{ "main.glowTf", "0.40" },
			{ "main.glowTf.toolTip",
					"Lower limit of photon energy for plot [MeV]!" },
			{ "main.ghighTf", "3.40" },
			{ "main.ghighTf.toolTip",
					"Upper limit of photon energy for plot [MeV]!" },
			{ "main.elowTf", "0.520" },
			{ "main.elowTf.toolTip",
					"Lower limit of electron(positron) energy for plot [MeV]!" },
			{ "main.ehighTf", "20.0" },
			{ "main.ehighTf.toolTip",
					"Upper limit of electron(positron) energy for plot [MeV]!" },
			{ "main.gaspTf", "0.00" },
			{ "main.gaspTf.toolTip",
					"0.0 for non-gas state, gas pressure in atm. otherwise!" },

			{ "auto.border", "Medium - autoselection" },
			{ "manual.border", "Medium - manual configuration" },
			{ "energy.border", "Energy limits" },

			{ "gasp.label", "If gas state, gas pressure [atm]: " },
			{ "medium.label", "Medium selection: " },
			{ "path.label", "Path to density file:" },
			{ "medname.label", "Medium name: " },
			{ "density.label", "Density [g/cm3]: " },
			{ "elem.label", "Element: " },
			{ "weight.label", "Fraction by weight: " },
			{ "energy.label", "Input energy[MeV]: " },
			{ "ae.label", "AE -lower threshold-[MeV]: " },
			{ "ap.label", "AP -lower threshold-[MeV]: " },
			{ "ue.label", "UE -upper limit-[MeV]: " },
			{ "up.label", "UP -upper limit-[MeV]: " },
			{ "glow.label", "PL_cutoff for plot [MeV]" },
			{ "ghigh.label", "PH_cutoff for plot [MeV]" },
			{ "elow.label", "EL_cutoff for plot [MeV]" },
			{ "ehigh.label", "EH_cutoff for plot [MeV]" },
			{ "rezultat1", "Cross sections: " },
			{ "main.PleaseWait.label", "Please Wait!" },
			// ---------------------------------------------------------------------
			{ "resut.def", "Cross section definition:" },
			{
					"resut.notes1",
					"Brems=bremsstrahlung, Molle=Moller, ETot=Electron total, no elastic interaction" },
			{ "resut.notes2",
					"Bhabh=Bhabha, Annih=Annihilation, PTot=Positron total, no elastic interaction" },
			{ "resut.notes3",
					"Photo=Photoelectric, Compt=Compton, Pair=Pair, Cohe=Coherent (Rayleigh) " },
			{ "resut.notes4",
					"PhT_R=Photon total, no coherent interaction, PhT=Photon total" },
			{ "resut.RLC", "Radiation length (RL) [cm]=  " },
			{ "resut.ep",
					"------------Electron and Positron evaluation---------------" },
			{ "resut.ph",
					"------------Photon evaluation------------------------------" },
			{ "resut.brems.rl", "  Brems[RL]= " },
			{ "resut.brems.cm", "  Brems[1/cm]= " },
			{ "resut.brems.g", "  Brems[cm2/g]= " },
			{ "resut.brems.b", "  Brems[b/at]= " },
			{ "resut.Molle.rl", "  Molle[RL]= " },
			{ "resut.Molle.cm", "  Molle[1/cm]= " },
			{ "resut.Molle.g", "  Molle[cm2/g]= " },
			{ "resut.Molle.b", "  Molle[b/at]= " },
			{ "resut.ETot.rl", "  ETot[RL]= " },
			{ "resut.ETot.cm", "  ETot[1/cm]= " },
			{ "resut.ETot.g", "  ETot[cm2/g]= " },
			{ "resut.ETot.b", "  ETot[b/at]= " },
			{ "resut.ebr", "  Brems/ETot= " },
			{ "resut.sptote",
					"  Total electron stopping power (collision+radiative) [MeV/cm]= " },
			{ "resut.sptotp",
					"  Total positron stopping power (collision+radiative) [MeV/cm]= " },
			{ "resut.Bhabh.rl", "  Bhabh[RL]= " },
			{ "resut.Bhabh.cm", "  Bhabh[1/cm]= " },
			{ "resut.Bhabh.g", "  Bhabh[cm2/g]= " },
			{ "resut.Bhabh.b", "  Bhabh[b/at]= " },
			{ "resut.Annih.rl", "  Annih[RL]= " },
			{ "resut.Annih.cm", "  Annih[1/cm]= " },
			{ "resut.Annih.g", "  Annih[cm2/g]= " },
			{ "resut.Annih.b", "  Annih[b/at]= " },
			{ "resut.PTot.rl", "  PTot[RL]= " },
			{ "resut.PTot.cm", "  PTot[1/cm]= " },
			{ "resut.PTot.g", "  PTot[cm2/g]= " },
			{ "resut.PTot.b", "  PTot[b/at]= " },
			{ "resut.pbr1", "  Brems/PTot= " },
			{ "resut.pbr2", "  (Brems+Bhabh)/PTot= " },
			{ "resut.Photo.rl", "  Photo[RL]= " },
			{ "resut.Photo.cm", "  Photo[1/cm]= " },
			{ "resut.Photo.g", "  Photo[cm2/g]= " },
			{ "resut.Photo.b", "  Photo[b/at]= " },
			{ "resut.Compt.rl", "  Compt[RL]= " },
			{ "resut.Compt.cm", "  Compt[1/cm]= " },
			{ "resut.Compt.g", "  Compt[cm2/g]= " },
			{ "resut.Compt.b", "  Compt[b/at]= " },
			{ "resut.Pair.rl", "  Pair[RL]= " },
			{ "resut.Pair.cm", "  Pair[1/cm]= " },
			{ "resut.Pair.g", "  Pair[cm2/g]= " },
			{ "resut.Pair.b", "  Pair[b/at]= " },
			{ "resut.Cohe.rl", "  Cohe[RL]= " },
			{ "resut.Cohe.cm", "  Cohe[1/cm]= " },
			{ "resut.Cohe.g", "  Cohe[cm2/g]= " },
			{ "resut.Cohe.b", "  Cohe[b/at]= " },
			{ "resut.PhT_R.rl", "  PhT_R[RL]= " },
			{ "resut.PhT_R.cm", "  PhT_R[1/cm]= " },
			{ "resut.PhT_R.g", "  PhT_R[cm2/g]= " },
			{ "resut.PhT_R.b", "  PhT_R[b/at]= " },
			{ "resut.PhT.rl", "  PhT[RL]= " },
			{ "resut.PhT.cm", "  PhT[1/cm]= " },
			{ "resut.PhT.g", "  PhT[cm2/g]= " },
			{ "resut.PhT.b", "  PhT[b/at]= " },
			{ "resut.gbr1", "  Pair/PhT_R= " },
			{ "resut.gbr11", "  Pair/PhT= " },
			{ "resut.gbr2", "  (Pair+Compt)/PhT_R= " },
			{ "resut.gbr22", "  (Pair+Compt)/PhT= " },
			{ "resut.gbr3", "  PhT_R/PhT= " },
			{ "resut.gbr33", "  Cohe/PhT= " },
			{ "resut.gmfp", "  Gamma mean free path [cm]= " },
			// {"yield.label","Probabilitate emisie pe pic (%): "},
			/*
			 * { "yield.label", "Probab. emisie pe pic (%): " }, {
			 * "activ.label", "Activitate (Bq): " }, { "eff.label",
			 * "Eficienta (%): " },
			 * 
			 * { "main.PleaseWait.label", "Simulare in progres!" }, {
			 * "ds.timeelapsed", "Durata simularii:   " }, { "ds.photon.total",
			 * "Numarul total de fotoni care intra in detector= " }, {
			 * "ds.photon.photo",
			 * "Ponderea evenimenelor legate de absortia fotoelectrica (%)= " },
			 * { "ds.photon.pair",
			 * "Ponderea evenimentelor legate de formarea de perechi (%)= " }, {
			 * "ds.effind", "Eficienta (%) la rularea: " }, { "ds.efffinal",
			 * "Eficienta (%) finala: " },
			 * 
			 * { "dialog.double.title", "Eroare..." }, {
			 * "dialog.double.message", "Introduceti numere reale!" }, {
			 * "dialog.pos.title", "Eroare..." }, { "dialog.pos.message",
			 * "Introduceti numere reale pozitive!" }, { "dialog.energy.title",
			 * "Eroare energie..." }, { "dialog.energy.message",
			 * "Selectati o energie in intervalul [0 - 3.0] MeV!!" }, {
			 * "dialog.activ.title", "Eroare...." }, { "dialog.activ.message",
			 * "Rulati intai simularea eficientei de detectie!" }, {
			 * "dialog.marinelli1.title", "Eroare...." }, {
			 * "dialog.marinelli1.message",
			 * "Diametrul interior trebuie sa fie mai mic ca diametrul exterior dar mai mare decat diametrul detectorului!"
			 * }, { "dialog.marinelli2.title", "Eroare...." }, {
			 * "dialog.marinelli2.message",
			 * "Inaltimea portiunii superioare trebuie sa fie mai mica decat inaltimea totala!"
			 * }, { "dialog.tot.title", "Eroare..." }, { "dialog.tot.message",
			 * "Dimensiunile totale trebuie sa fie mai mari ca cele efective!"
			 * }, { "dialog.up.title", "Eroare..." }, { "dialog.up.message",
			 * "Inaltimea volumului inactiv superior trebuie sa fie mai mica decat diferenta dintre inaltimea totala si cea efectiva!"
			 * }, { "dialog.thk.title", "Eroare..." }, { "dialog.thk.message",
			 * "Suma grosimilor ferestrelor trebuie sa fie mai mica decat inaltimea volumului inactiv superior!"
			 * },
			 */// ============
				// ------------------------
			{ "pleaseWait.label", "Work in progress!" },
			{ "mainPanel.textArea.label", "Results:" },

			{ "runB", "Run" },
			{ "runB.toolTip", "Application start" },
			{ "runB.mnemonic", new Character('R') },

			{ "killB", "Kill" },
			{ "killB.toolTip", "Application stop" },
			{ "killB.mnemonic", new Character('K') },

			{ "printB", "Pdf print..." },
			{ "printB.toolTip", "Save report as pdf file" },
			{ "printB.mnemonic", new Character('P') },

			{
					"numberOfHystoriesCb",
					new String[] { "1000", "10000", "20000", "40000", "80000",
							"150000", "300000", "1000000" } },

			{ "numberOfHystoriesLb", "Number of histories: " },
			{ "sourceToDetectorDistanceLb", "Source-Detector distance [cm]: " },
			{ "sourceDiameterLb", "Source diameter [cm]: " },
			{ "detectorDiameterLb", "Detector diameter [cm]: " },

			{ "text.alphaEff", "Alpha efficiency [/100 particles] = " },
			{ "text.alphaEff.err", " ; 2 sigma uncertainty [%] = " },
			{ "text.solidAngle", "Geometry solid angle [sr] = " },
			{ "text.solidAngle.err", " ; 2 sigma uncertainty [%] = " },

			// ==================================================================
			{ "dialog.exit.title", "Confirm..." },
			{ "dialog.exit.message", "Are you sure?" },
			{ "dialog.exit.buttons", new Object[] { "Yes", "No" } },

			{ "pdf.metadata.title", "GES_MC PDF" },
			{ "pdf.metadata.subject", "MC-simulation results" },
			{ "pdf.metadata.keywords", "GES_MC, PDF" },
			{ "pdf.metadata.author", "GES_MC" },
			{ "pdf.content.title", "GES_MC Simulation Report" },
			{ "pdf.content.subtitle", "Report generated by: " },
			{ "pdf.page", "Page " }, { "pdf.header", "GES_MC output" },
			{ "file.extension", "pdf" }, { "file.description", "PDF file" },
			{ "dialog.overwrite.title", "Overwriting..." },
			{ "dialog.overwrite.message", "Are you sure?" },
			{ "dialog.overwrite.buttons", new Object[] { "Yes", "No" } },

	};

}
